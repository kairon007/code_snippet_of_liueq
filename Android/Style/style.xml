<!-- 
     Title: Style
     Tag: style, theme
     Update: 2015/07/23
     Description: 自定义的一些Style方法

#常见的暗色，亮色Theme，如果是使用Toolbar，应该选择NoActionBar的主题
- Theme.AppCompat -> 暗色Activity，暗色app bar (实际字体是白色)
- Theme.AppCompat.Light -> 亮色Activity，亮色app bar(实际字体是黑色)
- Theme.AppCompat.Light.DarkActionBar -> 亮色Activity，暗色app bar(实际字体则是白色)

#关于ThemeOverlay开头的主题
ThemeOverlay一般用于某些单独的控件中，只对于该控件生效，覆盖默认设置的主题。



-->

<!-- 去掉Actoinbar-->
<item name="windowActionBar">false</item>
<item name="windowNoTitle">true</item>

<!-- 设定主色调-->
<item name="colorPrimary">#2196F3</item>
<item name="colorPrimaryDark">#1565C0</item>
<item name="colorAccent">#1565C0</item>


<!-- 自定义一些控件的属性，然后可以在控件中直接引用Style，而不需要一一再指定了 -->

# 例如定义一个ProgressBar的属性
<style name="AppTheme.ProgressBar">
    <item name="android:layout_width">wrap_content</item>
    <item name="android:layout_height">wrap_content</item>
    <item name="android:layout_centerInParent">true</item>
    <item name="android:layout_gravity">center</item>
    <item name="android:visibility">visible</item>
</style>

# 下次使用的时候就可以直接设置
<ProgressBar
    style="@style/AppTheme.ProgressBar"
    android:layout_centerInParent="true"/>
